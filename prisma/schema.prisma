// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String      @id @default(uuid()) @db.Uuid
  clerkId   String      @unique
  email     String?
  name      String?
  createdAt DateTime    @default(now())
  accounts  Account[]
  transactions Transaction[]
  categories Category[]
  budgets   Budget[]
}

model Account {
  id        String     @id @default(uuid()) @db.Uuid
  userId    String     @db.Uuid
  name      String
  provider  String?
  balance   Decimal    @db.Decimal(12, 2) @default("0")
  currency  String     @default("INR")
  transactions Transaction[]
  user      User       @relation(fields: [userId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Category {
  id        String        @id @default(uuid()) @db.Uuid
  userId    String        @db.Uuid
  name      String
  type      TransactionType
  color     String?
  transactions Transaction[]
  user      User          @relation(fields: [userId], references: [id])
}

enum TransactionType {
  EXPENSE
  INCOME
  TRANSFER
}


model Transaction {
  id          String        @id @default(uuid()) @db.Uuid
  userId      String        @db.Uuid
  accountId   String?       @db.Uuid
  categoryId  String?       @db.Uuid
  type        TransactionType
  amount      Decimal       @db.Decimal(12, 2)
  currency    String        @default("INR")
  notes       String?
  date        DateTime      @default(now())
  attachments Attachment[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  user        User?         @relation(fields: [userId], references: [id])
  account     Account?      @relation(fields: [accountId], references: [id])
  category    Category?     @relation(fields: [categoryId], references: [id])
}

model Attachment {
  id            String     @id @default(uuid()) @db.Uuid
  transactionId String?    @db.Uuid
  url           String
  path          String
  size          Int?
  mime          String?
  createdAt     DateTime   @default(now())
  transaction   Transaction? @relation(fields: [transactionId], references: [id])
}

model Budget {
  id        String     @id @default(uuid()) @db.Uuid
  userId    String     @db.Uuid
  name      String
  amount    Decimal    @db.Decimal(12,2)
  period    BudgetPeriod @default(MONTHLY)
  startDate DateTime
  endDate   DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  user      User       @relation(fields: [userId], references: [id])
}

enum BudgetPeriod {
  MONTHLY
  WEEKLY
  YEARLY
}